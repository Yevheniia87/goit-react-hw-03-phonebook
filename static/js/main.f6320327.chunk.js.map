{"version":3,"sources":["component/Filter/filter.module.css","component/Forma/forma.module.css","component/Forma/Forma.js","component/ContactsList/ContactsList.js","component/Filter/Filter.js","App.js","index.js","component/ContactsList/contacts.module.css"],"names":["module","exports","Forma","state","contacts","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","className","styles","form","label","htmlFor","input","id","onChange","type","pattern","title","required","button","Component","ContactsList","onDelete","list","map","li","buttonDel","onClick","Filter","filter","filterInput","App","addContact","find","contact","toLowerCase","alert","newContact","checkContact","includes","changeFilter","removeContact","contactId","prevState","savedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6320327.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__jTWfq\",\"filterInput\":\"filter_filterInput__2UDLd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"forma_form__3pahl\",\"label\":\"forma_label__HS2jT\",\"input\":\"forma_input___UVR_\",\"button\":\"forma_button__2MTg1\"};","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport styles from \"./forma.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Forma extends Component {\r\n  state = {\r\n    contacts: [],\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.resetForm();\r\n  };\r\n  resetForm = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label} htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            id={this.nameInputId}\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          ></input>\r\n        </label>\r\n        <label className={styles.label} htmlFor={this.numberInputId}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            id={this.numberInputId}\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          ></input>\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nForma.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./contacts.module.css\";\r\n\r\nexport default function ContactsList({ contacts, onDelete }) {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={styles.li} key={id}>\r\n          {name}: {number}\r\n          <button className={styles.buttonDel} onClick={() => onDelete(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  }),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./filter.module.css\";\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <label className={styles.filter}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.filterInput}\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import \"./App.css\";\nimport shortid from \"shortid\";\nimport React, { Component } from \"react\";\nimport Forma from \"./component/Forma/Forma.js\";\nimport ContactsList from \"./component/ContactsList/ContactsList.js\";\nimport Filter from \"./component/Filter/Filter.js\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n  addContact = ({ name, number }) => {\n    if (\n      this.state.contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  checkContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n  componentDidMount() {\n    const savedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (savedContacts) {\n      this.setState({ contacts: savedContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  render() {\n    const { filter } = this.state;\n    return (\n      <>\n        <section>\n          <h2>Phonebook</h2>\n          <Forma onSubmit={this.addContact} />\n        </section>\n        <section>\n          <h2>Contacts</h2>\n          <Filter value={filter} onChange={this.changeFilter} />\n\n          <ContactsList\n            contacts={this.checkContact()}\n            onDelete={this.removeContact}\n          />\n        </section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDel\":\"contacts_buttonDel__2kZdu\",\"list\":\"contacts_list__3B3f5\",\"li\":\"contacts_li__1GcYy\"};"],"sourceRoot":""}